
Deployment/hubble-ui (kubernetes)
=================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'backend' of Deployment 'hubble-ui' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/hubble-ui:77-91
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  77 ┌                 - env:
  78 │                     - name: EVENTS_SERVER_PORT
  79 │                       value: "8090"
  80 │                     - name: FLOWS_API_ADDR
  81 │                       value: hubble-relay:80
  82 │                   image: quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803
  83 │                   imagePullPolicy: IfNotPresent
  84 │                   name: backend
  85 └                   ports:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/hubble-ui (kubernetes)
=================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'frontend' of Deployment 'hubble-ui' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/hubble-ui:43-76
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  43 ┌                 - image: quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666
  44 │                   imagePullPolicy: IfNotPresent
  45 │                   livenessProbe:
  46 │                     failureThreshold: 3
  47 │                     httpGet:
  48 │                         path: /healthz
  49 │                         port: 8081
  50 │                         scheme: HTTP
  51 └                     periodSeconds: 10
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/tetragon-operator (kubernetes)
=========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'tetragon-operator' of Deployment 'tetragon-operator' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/tetragon-operator:44-94
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  44 ┌                 - args:
  45 │                     - serve
  46 │                     - --config-dir=/etc/tetragon/operator.conf.d/
  47 │                     - --metrics-bind-address=:2113
  48 │                   command:
  49 │                     - /usr/bin/tetragon-operator
  50 │                   image: quay.io/cilium/tetragon-operator:v1.1.2
  51 │                   imagePullPolicy: IfNotPresent
  52 └                   livenessProbe:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/coredns (kubernetes)
===============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'coredns' of Deployment 'coredns' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/coredns:45-99
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  45 ┌                 - args:
  46 │                     - -conf
  47 │                     - /etc/coredns/Corefile
  48 │                   image: registry.k8s.io/coredns/coredns:v1.11.1
  49 │                   imagePullPolicy: IfNotPresent
  50 │                   livenessProbe:
  51 │                     failureThreshold: 5
  52 │                     httpGet:
  53 └                         path: /health
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/local-path-provisioner (kubernetes)
==============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'local-path-provisioner' of Deployment 'local-path-provisioner' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/local-path-provisioner:18-36
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  18 ┌                 - command:
  19 │                     - local-path-provisioner
  20 │                     - --debug
  21 │                     - start
  22 │                     - --helper-image
  23 │                     - docker.io/kindest/local-path-helper:v20230510-486859a6
  24 │                     - --config
  25 │                     - /etc/config/config.json
  26 └                   env:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-ad-service (kubernetes)
==========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'ad-service' of Deployment 'unguard-ad-service' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-ad-service:36-63
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: ASPNETCORE_ENVIRONMENT
  38 │                       value: Production
  39 │                     - name: SERVER_PORT
  40 │                       value: "8082"
  41 │                     - name: API_PATH
  42 │                       value: /ad-service
  43 │                     - name: USER_AUTH_SERVICE_ADDRESS
  44 └                       value: unguard-user-auth-service
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-envoy-proxy (kubernetes)
===========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'envoy-proxy' of Deployment 'unguard-envoy-proxy' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-envoy-proxy:39-51
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  39 ┌                 - image: ghcr.io/dynatrace-oss/unguard/unguard-envoy-proxy:0.9.3
  40 │                   imagePullPolicy: IfNotPresent
  41 │                   name: envoy-proxy
  42 │                   ports:
  43 │                     - containerPort: 8080
  44 │                       name: http
  45 │                       protocol: TCP
  46 │                     - containerPort: 8081
  47 └                       name: health
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-frontend (kubernetes)
========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'frontend' of Deployment 'unguard-frontend' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-frontend:36-81
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: MICROBLOG_SERVICE_ADDRESS
  38 │                       value: unguard-microblog-service
  39 │                     - name: PROXY_SERVICE_ADDRESS
  40 │                       value: unguard-proxy-service
  41 │                     - name: USER_AUTH_SERVICE_ADDRESS
  42 │                       value: unguard-user-auth-service
  43 │                     - name: AD_SERVICE_ADDRESS
  44 └                       value: unguard-ad-service
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-like-service (kubernetes)
============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'like-service' of Deployment 'unguard-like-service' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-like-service:36-58
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8000"
  39 │                     - name: API_PATH
  40 │                       value: /like-service
  41 │                     - name: USER_AUTH_SERVICE_ADDRESS
  42 │                       value: unguard-user-auth-service
  43 │                     - name: MARIADB_PASSWORD
  44 └                       valueFrom:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-membership-service (kubernetes)
==================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'membership-service' of Deployment 'unguard-membership-service' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-membership-service:36-58
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: ASPNETCORE_ENVIRONMENT
  38 │                       value: Development
  39 │                     - name: SERVER_PORT
  40 │                       value: "8083"
  41 │                     - name: API_PATH
  42 │                       value: /membership-service
  43 │                     - name: MARIADB_SERVICE
  44 └                       value: unguard-mariadb
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-microblog-service (kubernetes)
=================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'microblog-service' of Deployment 'unguard-microblog-service' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-microblog-service:36-61
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8080"
  39 │                     - name: REDIS_SERVICE_ADDRESS
  40 │                       value: unguard-redis
  41 │                     - name: USER_AUTH_SERVICE_ADDRESS
  42 │                       value: unguard-user-auth-service
  43 │                     - name: OPENTRACING_JAEGER_ENABLED
  44 └                       value: "false"
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-payment-service (kubernetes)
===============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'payment-service' of Deployment 'unguard-payment-service' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-payment-service:36-69
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8084"
  39 │                     - name: API_PATH
  40 │                       value: /payment-service
  41 │                     - name: OTEL_LOGS_EXPORTER
  42 │                       value: none
  43 │                     - name: OTEL_METRICS_EXPORTER
  44 └                       value: none
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-profile-service (kubernetes)
===============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'profile-service' of Deployment 'unguard-profile-service' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-profile-service:36-69
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SPRING_DATASOURCE_URL
  38 │                       value: jdbc:h2:file:./database/bio
  39 │                     - name: SPRING_DATASOURCE_USERNAME
  40 │                       value: sa
  41 │                     - name: SPRING_DATASOURCE_PASSWORD
  42 │                       value: password
  43 │                     - name: OTEL_LOGS_EXPORTER
  44 └                       value: none
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-proxy-service (kubernetes)
=============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'proxy-service' of Deployment 'unguard-proxy-service' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-proxy-service:36-57
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8081"
  39 │                     - name: OPENTRACING_JAEGER_ENABLED
  40 │                       value: "false"
  41 │                     - name: JAEGER_SERVICE_NAME
  42 │                       value: unguard-proxy-service
  43 │                     - name: JAEGER_AGENT_HOST
  44 └                       value: jaeger-agent
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-redis (kubernetes)
=====================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'redis' of Deployment 'unguard-redis' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-redis:36-75
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - command:
  37 │                     - redis-server
  38 │                     - /config/redis.conf
  39 │                   env:
  40 │                     - name: MASTER
  41 │                       value: "true"
  42 │                   image: redis:5.0
  43 │                   imagePullPolicy: IfNotPresent
  44 └                   livenessProbe:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-status-service (kubernetes)
==============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'status-service' of Deployment 'unguard-status-service' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-status-service:36-60
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8083"
  39 │                     - name: API_PATH
  40 │                       value: /status-service
  41 │                     - name: KUBERNETES_NAMESPACE
  42 │                       value: unguard
  43 │                     - name: IGNORED_DEPLOYMENTS
  44 └                       value: unguard-user-simulator
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-user-auth-service (kubernetes)
=================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'user-auth-service' of Deployment 'unguard-user-auth-service' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-user-auth-service:36-64
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "9091"
  39 │                     - name: MARIADB_SERVICE
  40 │                       value: unguard-mariadb
  41 │                     - name: MARIADB_PASSWORD
  42 │                       valueFrom:
  43 │                         secretKeyRef:
  44 └                             key: mariadb-root-password
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Pod/etcd-kind-control-plane (kubernetes)
========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'etcd' of Pod 'etcd-kind-control-plane' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Pod/etcd-kind-control-plane:26-82
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  26 ┌         - command:
  27 │             - etcd
  28 │             - --advertise-client-urls=https://172.18.0.2:2379
  29 │             - --cert-file=/etc/kubernetes/pki/etcd/server.crt
  30 │             - --client-cert-auth=true
  31 │             - --data-dir=/var/lib/etcd
  32 │             - --experimental-initial-corrupt-check=true
  33 │             - --experimental-watch-progress-notify-interval=5s
  34 └             - --initial-advertise-peer-urls=https://172.18.0.2:2380
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Pod/kube-apiserver-kind-control-plane (kubernetes)
==================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'kube-apiserver' of Pod 'kube-apiserver-kind-control-plane' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Pod/kube-apiserver-kind-control-plane:26-118
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  26 ┌         - command:
  27 │             - kube-apiserver
  28 │             - --advertise-address=172.18.0.2
  29 │             - --allow-privileged=true
  30 │             - --audit-log-path=/var/log/kubernetes/kube-apiserver-audit.log
  31 │             - --audit-policy-file=/etc/kubernetes/policies/audit-policy.yaml
  32 │             - --authorization-mode=Node,RBAC
  33 │             - --client-ca-file=/etc/kubernetes/pki/ca.crt
  34 └             - --enable-admission-plugins=NodeRestriction
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Pod/kube-controller-manager-kind-control-plane (kubernetes)
===========================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'kube-controller-manager' of Pod 'kube-controller-manager-kind-control-plane' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Pod/kube-controller-manager-kind-control-plane:25-95
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  25 ┌         - command:
  26 │             - kube-controller-manager
  27 │             - --allocate-node-cidrs=true
  28 │             - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
  29 │             - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
  30 │             - --bind-address=127.0.0.1
  31 │             - --client-ca-file=/etc/kubernetes/pki/ca.crt
  32 │             - --cluster-cidr=10.244.0.0/16
  33 └             - --cluster-name=kind
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Pod/kube-scheduler-kind-control-plane (kubernetes)
==================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'kube-scheduler' of Pod 'kube-scheduler-kind-control-plane' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Pod/kube-scheduler-kind-control-plane:25-65
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  25 ┌         - command:
  26 │             - kube-scheduler
  27 │             - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
  28 │             - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
  29 │             - --bind-address=127.0.0.1
  30 │             - --kubeconfig=/etc/kubernetes/scheduler.conf
  31 │             - --leader-elect=true
  32 │           image: registry.k8s.io/kube-scheduler:v1.30.0
  33 └           imagePullPolicy: IfNotPresent
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



StatefulSet/kubeclarity-kubeclarity-postgresql (kubernetes)
===========================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'postgresql' of StatefulSet 'kubeclarity-kubeclarity-postgresql' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 StatefulSet/kubeclarity-kubeclarity-postgresql:57-133
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  57 ┌                 - env:
  58 │                     - name: BITNAMI_DEBUG
  59 │                       value: "false"
  60 │                     - name: POSTGRESQL_PORT_NUMBER
  61 │                       value: "5432"
  62 │                     - name: POSTGRESQL_VOLUME_DIR
  63 │                       value: /bitnami/postgresql
  64 │                     - name: PGDATA
  65 └                       value: /bitnami/postgresql/data
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/gadget (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'gadget' of DaemonSet 'gadget' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/gadget:33-139
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  33 ┌                 - command:
  34 │                     - /entrypoint
  35 │                   env:
  36 │                     - name: NODE_NAME
  37 │                       valueFrom:
  38 │                         fieldRef:
  39 │                             apiVersion: v1
  40 │                             fieldPath: spec.nodeName
  41 └                     - name: GADGET_POD_UID
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'apply-sysctl-overwrites' of DaemonSet 'cilium' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:277-308
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 277 ┌                 - command:
 278 │                     - sh
 279 │                     - -ec
 280 │                     - |
 281 │                       cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
 282 │                       nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
 283 │                       rm /hostbin/cilium-sysctlfix
 284 │                   env:
 285 └                     - name: BIN_PATH
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'cilium-agent' of DaemonSet 'cilium' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:49-212
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  49 ┌                 - args:
  50 │                     - --config-dir=/tmp/cilium/config-map
  51 │                   command:
  52 │                     - cilium-agent
  53 │                   env:
  54 │                     - name: K8S_NODE_NAME
  55 │                       valueFrom:
  56 │                         fieldRef:
  57 └                             apiVersion: v1
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'clean-cilium-state' of DaemonSet 'cilium' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:327-377
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 327 ┌                 - command:
 328 │                     - /init-container.sh
 329 │                   env:
 330 │                     - name: CILIUM_ALL_STATE
 331 │                       valueFrom:
 332 │                         configMapKeyRef:
 333 │                             key: clean-cilium-state
 334 │                             name: cilium-config
 335 └                             optional: true
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'config' of DaemonSet 'cilium' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:216-242
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 216 ┌                 - command:
 217 │                     - cilium-dbg
 218 │                     - build-config
 219 │                   env:
 220 │                     - name: K8S_NODE_NAME
 221 │                       valueFrom:
 222 │                         fieldRef:
 223 │                             apiVersion: v1
 224 └                             fieldPath: spec.nodeName
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'install-cni-binaries' of DaemonSet 'cilium' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:378-398
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 378 ┌                 - command:
 379 │                     - /install-plugin.sh
 380 │                   image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
 381 │                   imagePullPolicy: IfNotPresent
 382 │                   name: install-cni-binaries
 383 │                   resources:
 384 │                     requests:
 385 │                         cpu: 100m
 386 └                         memory: 10Mi
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'mount-bpf-fs' of DaemonSet 'cilium' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:309-326
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 309 ┌                 - args:
 310 │                     - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
 311 │                   command:
 312 │                     - /bin/bash
 313 │                     - -c
 314 │                     - --
 315 │                   image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
 316 │                   imagePullPolicy: IfNotPresent
 317 └                   name: mount-bpf-fs
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'mount-cgroup' of DaemonSet 'cilium' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:243-276
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 243 ┌                 - command:
 244 │                     - sh
 245 │                     - -ec
 246 │                     - |
 247 │                       cp /usr/bin/cilium-mount /hostbin/cilium-mount;
 248 │                       nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
 249 │                       rm /hostbin/cilium-mount
 250 │                   env:
 251 └                     - name: CGROUP_ROOT
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/tetragon (kubernetes)
===============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'export-stdout' of DaemonSet 'tetragon' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/tetragon:39-52
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  39 ┌                 - args:
  40 │                     - /var/run/cilium/tetragon/tetragon.log
  41 │                   command:
  42 │                     - hubble-export-stdout
  43 │                   image: quay.io/cilium/hubble-export-stdout:v1.0.4
  44 │                   imagePullPolicy: IfNotPresent
  45 │                   name: export-stdout
  46 │                   resources: {}
  47 └                   securityContext: {}
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/tetragon (kubernetes)
===============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'tetragon' of DaemonSet 'tetragon' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/tetragon:53-89
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  53 ┌                 - args:
  54 │                     - --config-dir=/etc/tetragon/tetragon.conf.d/
  55 │                   env:
  56 │                     - name: NODE_NAME
  57 │                       valueFrom:
  58 │                         fieldRef:
  59 │                             apiVersion: v1
  60 │                             fieldPath: spec.nodeName
  61 └                   image: quay.io/cilium/tetragon:v1.1.2
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



CronJob/unguard-user-simulator (kubernetes)
===========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'unguard-user-simulator' of CronJob 'unguard-user-simulator' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 CronJob/unguard-user-simulator:29-45
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  29 ┌                         - env:
  30 │                             - name: FRONTEND_ADDR
  31 │                               value: unguard-envoy-proxy:8080/ui
  32 │                             - name: SIMULATE_PRIVATE_RANGES
  33 │                               value: "false"
  34 │                           image: ghcr.io/dynatrace-oss/unguard/unguard-user-simulator:0.9.3
  35 │                           imagePullPolicy: IfNotPresent
  36 │                           name: unguard-user-simulator
  37 └                           resources:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/cilium-operator (kubernetes)
=======================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'cilium-operator' of Deployment 'cilium-operator' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/cilium-operator:55-116
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  55 ┌                 - args:
  56 │                     - --config-dir=/tmp/cilium/config-map
  57 │                     - --debug=$(CILIUM_DEBUG)
  58 │                   command:
  59 │                     - cilium-operator-generic
  60 │                   env:
  61 │                     - name: K8S_NODE_NAME
  62 │                       valueFrom:
  63 └                         fieldRef:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/hubble-ui (kubernetes)
=================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'backend' of Deployment 'hubble-ui' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/hubble-ui:77-91
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  77 ┌                 - env:
  78 │                     - name: EVENTS_SERVER_PORT
  79 │                       value: "8090"
  80 │                     - name: FLOWS_API_ADDR
  81 │                       value: hubble-relay:80
  82 │                   image: quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803
  83 │                   imagePullPolicy: IfNotPresent
  84 │                   name: backend
  85 └                   ports:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/hubble-ui (kubernetes)
=================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'frontend' of Deployment 'hubble-ui' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/hubble-ui:43-76
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  43 ┌                 - image: quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666
  44 │                   imagePullPolicy: IfNotPresent
  45 │                   livenessProbe:
  46 │                     failureThreshold: 3
  47 │                     httpGet:
  48 │                         path: /healthz
  49 │                         port: 8081
  50 │                         scheme: HTTP
  51 └                     periodSeconds: 10
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/tetragon-operator (kubernetes)
=========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'tetragon-operator' of Deployment 'tetragon-operator' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/tetragon-operator:44-94
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  44 ┌                 - args:
  45 │                     - serve
  46 │                     - --config-dir=/etc/tetragon/operator.conf.d/
  47 │                     - --metrics-bind-address=:2113
  48 │                   command:
  49 │                     - /usr/bin/tetragon-operator
  50 │                   image: quay.io/cilium/tetragon-operator:v1.1.2
  51 │                   imagePullPolicy: IfNotPresent
  52 └                   livenessProbe:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/local-path-provisioner (kubernetes)
==============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'local-path-provisioner' of Deployment 'local-path-provisioner' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/local-path-provisioner:18-36
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  18 ┌                 - command:
  19 │                     - local-path-provisioner
  20 │                     - --debug
  21 │                     - start
  22 │                     - --helper-image
  23 │                     - docker.io/kindest/local-path-helper:v20230510-486859a6
  24 │                     - --config
  25 │                     - /etc/config/config.json
  26 └                   env:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-ad-service (kubernetes)
==========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'ad-service' of Deployment 'unguard-ad-service' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-ad-service:36-63
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: ASPNETCORE_ENVIRONMENT
  38 │                       value: Production
  39 │                     - name: SERVER_PORT
  40 │                       value: "8082"
  41 │                     - name: API_PATH
  42 │                       value: /ad-service
  43 │                     - name: USER_AUTH_SERVICE_ADDRESS
  44 └                       value: unguard-user-auth-service
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-envoy-proxy (kubernetes)
===========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'envoy-proxy' of Deployment 'unguard-envoy-proxy' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-envoy-proxy:39-51
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  39 ┌                 - image: ghcr.io/dynatrace-oss/unguard/unguard-envoy-proxy:0.9.3
  40 │                   imagePullPolicy: IfNotPresent
  41 │                   name: envoy-proxy
  42 │                   ports:
  43 │                     - containerPort: 8080
  44 │                       name: http
  45 │                       protocol: TCP
  46 │                     - containerPort: 8081
  47 └                       name: health
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-frontend (kubernetes)
========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'frontend' of Deployment 'unguard-frontend' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-frontend:36-81
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: MICROBLOG_SERVICE_ADDRESS
  38 │                       value: unguard-microblog-service
  39 │                     - name: PROXY_SERVICE_ADDRESS
  40 │                       value: unguard-proxy-service
  41 │                     - name: USER_AUTH_SERVICE_ADDRESS
  42 │                       value: unguard-user-auth-service
  43 │                     - name: AD_SERVICE_ADDRESS
  44 └                       value: unguard-ad-service
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-like-service (kubernetes)
============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'like-service' of Deployment 'unguard-like-service' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-like-service:36-58
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8000"
  39 │                     - name: API_PATH
  40 │                       value: /like-service
  41 │                     - name: USER_AUTH_SERVICE_ADDRESS
  42 │                       value: unguard-user-auth-service
  43 │                     - name: MARIADB_PASSWORD
  44 └                       valueFrom:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-membership-service (kubernetes)
==================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'membership-service' of Deployment 'unguard-membership-service' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-membership-service:36-58
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: ASPNETCORE_ENVIRONMENT
  38 │                       value: Development
  39 │                     - name: SERVER_PORT
  40 │                       value: "8083"
  41 │                     - name: API_PATH
  42 │                       value: /membership-service
  43 │                     - name: MARIADB_SERVICE
  44 └                       value: unguard-mariadb
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-microblog-service (kubernetes)
=================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'microblog-service' of Deployment 'unguard-microblog-service' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-microblog-service:36-61
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8080"
  39 │                     - name: REDIS_SERVICE_ADDRESS
  40 │                       value: unguard-redis
  41 │                     - name: USER_AUTH_SERVICE_ADDRESS
  42 │                       value: unguard-user-auth-service
  43 │                     - name: OPENTRACING_JAEGER_ENABLED
  44 └                       value: "false"
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-payment-service (kubernetes)
===============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'payment-service' of Deployment 'unguard-payment-service' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-payment-service:36-69
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8084"
  39 │                     - name: API_PATH
  40 │                       value: /payment-service
  41 │                     - name: OTEL_LOGS_EXPORTER
  42 │                       value: none
  43 │                     - name: OTEL_METRICS_EXPORTER
  44 └                       value: none
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-profile-service (kubernetes)
===============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'profile-service' of Deployment 'unguard-profile-service' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-profile-service:36-69
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SPRING_DATASOURCE_URL
  38 │                       value: jdbc:h2:file:./database/bio
  39 │                     - name: SPRING_DATASOURCE_USERNAME
  40 │                       value: sa
  41 │                     - name: SPRING_DATASOURCE_PASSWORD
  42 │                       value: password
  43 │                     - name: OTEL_LOGS_EXPORTER
  44 └                       value: none
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-proxy-service (kubernetes)
=============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'proxy-service' of Deployment 'unguard-proxy-service' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-proxy-service:36-57
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8081"
  39 │                     - name: OPENTRACING_JAEGER_ENABLED
  40 │                       value: "false"
  41 │                     - name: JAEGER_SERVICE_NAME
  42 │                       value: unguard-proxy-service
  43 │                     - name: JAEGER_AGENT_HOST
  44 └                       value: jaeger-agent
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-redis (kubernetes)
=====================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'redis' of Deployment 'unguard-redis' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-redis:36-75
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - command:
  37 │                     - redis-server
  38 │                     - /config/redis.conf
  39 │                   env:
  40 │                     - name: MASTER
  41 │                       value: "true"
  42 │                   image: redis:5.0
  43 │                   imagePullPolicy: IfNotPresent
  44 └                   livenessProbe:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-status-service (kubernetes)
==============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'status-service' of Deployment 'unguard-status-service' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-status-service:36-60
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8083"
  39 │                     - name: API_PATH
  40 │                       value: /status-service
  41 │                     - name: KUBERNETES_NAMESPACE
  42 │                       value: unguard
  43 │                     - name: IGNORED_DEPLOYMENTS
  44 └                       value: unguard-user-simulator
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-user-auth-service (kubernetes)
=================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'user-auth-service' of Deployment 'unguard-user-auth-service' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-user-auth-service:36-64
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "9091"
  39 │                     - name: MARIADB_SERVICE
  40 │                       value: unguard-mariadb
  41 │                     - name: MARIADB_PASSWORD
  42 │                       valueFrom:
  43 │                         secretKeyRef:
  44 └                             key: mariadb-root-password
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Pod/etcd-kind-control-plane (kubernetes)
========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'etcd' of Pod 'etcd-kind-control-plane' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Pod/etcd-kind-control-plane:26-82
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  26 ┌         - command:
  27 │             - etcd
  28 │             - --advertise-client-urls=https://172.18.0.2:2379
  29 │             - --cert-file=/etc/kubernetes/pki/etcd/server.crt
  30 │             - --client-cert-auth=true
  31 │             - --data-dir=/var/lib/etcd
  32 │             - --experimental-initial-corrupt-check=true
  33 │             - --experimental-watch-progress-notify-interval=5s
  34 └             - --initial-advertise-peer-urls=https://172.18.0.2:2380
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Pod/kube-apiserver-kind-control-plane (kubernetes)
==================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'kube-apiserver' of Pod 'kube-apiserver-kind-control-plane' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Pod/kube-apiserver-kind-control-plane:26-118
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  26 ┌         - command:
  27 │             - kube-apiserver
  28 │             - --advertise-address=172.18.0.2
  29 │             - --allow-privileged=true
  30 │             - --audit-log-path=/var/log/kubernetes/kube-apiserver-audit.log
  31 │             - --audit-policy-file=/etc/kubernetes/policies/audit-policy.yaml
  32 │             - --authorization-mode=Node,RBAC
  33 │             - --client-ca-file=/etc/kubernetes/pki/ca.crt
  34 └             - --enable-admission-plugins=NodeRestriction
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Pod/kube-controller-manager-kind-control-plane (kubernetes)
===========================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'kube-controller-manager' of Pod 'kube-controller-manager-kind-control-plane' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Pod/kube-controller-manager-kind-control-plane:25-95
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  25 ┌         - command:
  26 │             - kube-controller-manager
  27 │             - --allocate-node-cidrs=true
  28 │             - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
  29 │             - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
  30 │             - --bind-address=127.0.0.1
  31 │             - --client-ca-file=/etc/kubernetes/pki/ca.crt
  32 │             - --cluster-cidr=10.244.0.0/16
  33 └             - --cluster-name=kind
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Pod/kube-scheduler-kind-control-plane (kubernetes)
==================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'kube-scheduler' of Pod 'kube-scheduler-kind-control-plane' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Pod/kube-scheduler-kind-control-plane:25-65
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  25 ┌         - command:
  26 │             - kube-scheduler
  27 │             - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
  28 │             - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
  29 │             - --bind-address=127.0.0.1
  30 │             - --kubeconfig=/etc/kubernetes/scheduler.conf
  31 │             - --leader-elect=true
  32 │           image: registry.k8s.io/kube-scheduler:v1.30.0
  33 └           imagePullPolicy: IfNotPresent
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



StatefulSet/kubeclarity-kubeclarity-postgresql (kubernetes)
===========================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'postgresql' of StatefulSet 'kubeclarity-kubeclarity-postgresql' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 StatefulSet/kubeclarity-kubeclarity-postgresql:57-133
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  57 ┌                 - env:
  58 │                     - name: BITNAMI_DEBUG
  59 │                       value: "false"
  60 │                     - name: POSTGRESQL_PORT_NUMBER
  61 │                       value: "5432"
  62 │                     - name: POSTGRESQL_VOLUME_DIR
  63 │                       value: /bitnami/postgresql
  64 │                     - name: PGDATA
  65 └                       value: /bitnami/postgresql/data
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



StatefulSet/unguard-mariadb (kubernetes)
========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'mariadb' of StatefulSet 'unguard-mariadb' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 StatefulSet/unguard-mariadb:56-118
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  56 ┌                 - env:
  57 │                     - name: BITNAMI_DEBUG
  58 │                       value: "false"
  59 │                     - name: MARIADB_ROOT_PASSWORD
  60 │                       valueFrom:
  61 │                         secretKeyRef:
  62 │                             key: mariadb-root-password
  63 │                             name: unguard-mariadb
  64 └                     - name: MARIADB_DATABASE
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'apply-sysctl-overwrites' of DaemonSet 'cilium' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:277-308
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 277 ┌                 - command:
 278 │                     - sh
 279 │                     - -ec
 280 │                     - |
 281 │                       cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
 282 │                       nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
 283 │                       rm /hostbin/cilium-sysctlfix
 284 │                   env:
 285 └                     - name: BIN_PATH
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'cilium-agent' of DaemonSet 'cilium' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:49-212
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  49 ┌                 - args:
  50 │                     - --config-dir=/tmp/cilium/config-map
  51 │                   command:
  52 │                     - cilium-agent
  53 │                   env:
  54 │                     - name: K8S_NODE_NAME
  55 │                       valueFrom:
  56 │                         fieldRef:
  57 └                             apiVersion: v1
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'clean-cilium-state' of DaemonSet 'cilium' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:327-377
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 327 ┌                 - command:
 328 │                     - /init-container.sh
 329 │                   env:
 330 │                     - name: CILIUM_ALL_STATE
 331 │                       valueFrom:
 332 │                         configMapKeyRef:
 333 │                             key: clean-cilium-state
 334 │                             name: cilium-config
 335 └                             optional: true
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'config' of DaemonSet 'cilium' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:216-242
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 216 ┌                 - command:
 217 │                     - cilium-dbg
 218 │                     - build-config
 219 │                   env:
 220 │                     - name: K8S_NODE_NAME
 221 │                       valueFrom:
 222 │                         fieldRef:
 223 │                             apiVersion: v1
 224 └                             fieldPath: spec.nodeName
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'install-cni-binaries' of DaemonSet 'cilium' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:378-398
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 378 ┌                 - command:
 379 │                     - /install-plugin.sh
 380 │                   image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
 381 │                   imagePullPolicy: IfNotPresent
 382 │                   name: install-cni-binaries
 383 │                   resources:
 384 │                     requests:
 385 │                         cpu: 100m
 386 └                         memory: 10Mi
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'mount-bpf-fs' of DaemonSet 'cilium' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:309-326
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 309 ┌                 - args:
 310 │                     - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
 311 │                   command:
 312 │                     - /bin/bash
 313 │                     - -c
 314 │                     - --
 315 │                   image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
 316 │                   imagePullPolicy: IfNotPresent
 317 └                   name: mount-bpf-fs
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'mount-cgroup' of DaemonSet 'cilium' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:243-276
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 243 ┌                 - command:
 244 │                     - sh
 245 │                     - -ec
 246 │                     - |
 247 │                       cp /usr/bin/cilium-mount /hostbin/cilium-mount;
 248 │                       nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
 249 │                       rm /hostbin/cilium-mount
 250 │                   env:
 251 └                     - name: CGROUP_ROOT
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/tetragon (kubernetes)
===============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'export-stdout' of DaemonSet 'tetragon' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/tetragon:39-52
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  39 ┌                 - args:
  40 │                     - /var/run/cilium/tetragon/tetragon.log
  41 │                   command:
  42 │                     - hubble-export-stdout
  43 │                   image: quay.io/cilium/hubble-export-stdout:v1.0.4
  44 │                   imagePullPolicy: IfNotPresent
  45 │                   name: export-stdout
  46 │                   resources: {}
  47 └                   securityContext: {}
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/tetragon (kubernetes)
===============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'tetragon' of DaemonSet 'tetragon' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/tetragon:53-89
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  53 ┌                 - args:
  54 │                     - --config-dir=/etc/tetragon/tetragon.conf.d/
  55 │                   env:
  56 │                     - name: NODE_NAME
  57 │                       valueFrom:
  58 │                         fieldRef:
  59 │                             apiVersion: v1
  60 │                             fieldPath: spec.nodeName
  61 └                   image: quay.io/cilium/tetragon:v1.1.2
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



CronJob/unguard-user-simulator (kubernetes)
===========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'unguard-user-simulator' of CronJob 'unguard-user-simulator' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 CronJob/unguard-user-simulator:29-45
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  29 ┌                         - env:
  30 │                             - name: FRONTEND_ADDR
  31 │                               value: unguard-envoy-proxy:8080/ui
  32 │                             - name: SIMULATE_PRIVATE_RANGES
  33 │                               value: "false"
  34 │                           image: ghcr.io/dynatrace-oss/unguard/unguard-user-simulator:0.9.3
  35 │                           imagePullPolicy: IfNotPresent
  36 │                           name: unguard-user-simulator
  37 └                           resources:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/cilium-operator (kubernetes)
=======================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'cilium-operator' of Deployment 'cilium-operator' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/cilium-operator:55-116
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  55 ┌                 - args:
  56 │                     - --config-dir=/tmp/cilium/config-map
  57 │                     - --debug=$(CILIUM_DEBUG)
  58 │                   command:
  59 │                     - cilium-operator-generic
  60 │                   env:
  61 │                     - name: K8S_NODE_NAME
  62 │                       valueFrom:
  63 └                         fieldRef:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/hubble-relay (kubernetes)
====================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'hubble-relay' of Deployment 'hubble-relay' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/hubble-relay:48-99
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  48 ┌                 - args:
  49 │                     - serve
  50 │                   command:
  51 │                     - hubble-relay
  52 │                   image: quay.io/cilium/hubble-relay:v1.15.4@sha256:03ad857feaf52f1b4774c29614f42a50b370680eb7d0bfbc1ae065df84b1070a
  53 │                   imagePullPolicy: IfNotPresent
  54 │                   livenessProbe:
  55 │                     failureThreshold: 3
  56 └                     grpc:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/ingress-nginx-controller (kubernetes)
================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'controller' of Deployment 'ingress-nginx-controller' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/ingress-nginx-controller:49-124
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  49 ┌                 - args:
  50 │                     - /nginx-ingress-controller
  51 │                     - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
  52 │                     - --election-id=ingress-nginx-leader
  53 │                     - --controller-class=k8s.io/ingress-nginx
  54 │                     - --ingress-class=nginx
  55 │                     - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
  56 │                   env:
  57 └                     - name: POD_NAME
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'mount-bpf-fs' of DaemonSet 'cilium' should set 'securityContext.privileged' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Privileged containers share namespaces with the host system and do not offer any security. They should be used exclusively for system containers that require high privileges.

See https://avd.aquasec.com/misconfig/ksv017
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:309-326
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 309 ┌                 - args:
 310 │                     - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
 311 │                   command:
 312 │                     - /bin/bash
 313 │                     - -c
 314 │                     - --
 315 │                   image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
 316 │                   imagePullPolicy: IfNotPresent
 317 └                   name: mount-bpf-fs
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/tetragon (kubernetes)
===============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Container 'tetragon' of DaemonSet 'tetragon' should set 'securityContext.privileged' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Privileged containers share namespaces with the host system and do not offer any security. They should be used exclusively for system containers that require high privileges.

See https://avd.aquasec.com/misconfig/ksv017
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/tetragon:53-89
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  53 ┌                 - args:
  54 │                     - --config-dir=/etc/tetragon/tetragon.conf.d/
  55 │                   env:
  56 │                     - name: NODE_NAME
  57 │                       valueFrom:
  58 │                         fieldRef:
  59 │                             apiVersion: v1
  60 │                             fieldPath: spec.nodeName
  61 └                   image: quay.io/cilium/tetragon:v1.1.2
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Pod/etcd-kind-control-plane (kubernetes)
========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Pod 'etcd-kind-control-plane' should not set 'spec.template.spec.hostNetwork' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Pod/etcd-kind-control-plane:25-107
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  25 ┌     containers:
  26 │         - command:
  27 │             - etcd
  28 │             - --advertise-client-urls=https://172.18.0.2:2379
  29 │             - --cert-file=/etc/kubernetes/pki/etcd/server.crt
  30 │             - --client-cert-auth=true
  31 │             - --data-dir=/var/lib/etcd
  32 │             - --experimental-initial-corrupt-check=true
  33 └             - --experimental-watch-progress-notify-interval=5s
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Pod/kube-apiserver-kind-control-plane (kubernetes)
==================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Pod 'kube-apiserver-kind-control-plane' should not set 'spec.template.spec.hostNetwork' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Pod/kube-apiserver-kind-control-plane:25-163
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  25 ┌     containers:
  26 │         - command:
  27 │             - kube-apiserver
  28 │             - --advertise-address=172.18.0.2
  29 │             - --allow-privileged=true
  30 │             - --audit-log-path=/var/log/kubernetes/kube-apiserver-audit.log
  31 │             - --audit-policy-file=/etc/kubernetes/policies/audit-policy.yaml
  32 │             - --authorization-mode=Node,RBAC
  33 └             - --client-ca-file=/etc/kubernetes/pki/ca.crt
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Pod/kube-controller-manager-kind-control-plane (kubernetes)
===========================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Pod 'kube-controller-manager-kind-control-plane' should not set 'spec.template.spec.hostNetwork' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Pod/kube-controller-manager-kind-control-plane:24-140
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  24 ┌     containers:
  25 │         - command:
  26 │             - kube-controller-manager
  27 │             - --allocate-node-cidrs=true
  28 │             - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
  29 │             - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
  30 │             - --bind-address=127.0.0.1
  31 │             - --client-ca-file=/etc/kubernetes/pki/ca.crt
  32 └             - --cluster-cidr=10.244.0.0/16
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Pod/kube-scheduler-kind-control-plane (kubernetes)
==================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Pod 'kube-scheduler-kind-control-plane' should not set 'spec.template.spec.hostNetwork' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Pod/kube-scheduler-kind-control-plane:24-86
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  24 ┌     containers:
  25 │         - command:
  26 │             - kube-scheduler
  27 │             - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
  28 │             - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
  29 │             - --bind-address=127.0.0.1
  30 │             - --kubeconfig=/etc/kubernetes/scheduler.conf
  31 │             - --leader-elect=true
  32 └           image: registry.k8s.io/kube-scheduler:v1.30.0
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: DaemonSet 'cilium' should not set 'spec.template.spec.hostNetwork' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:20-488
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  20 ┌     revisionHistoryLimit: 10
  21 │     selector:
  22 │         matchLabels:
  23 │             k8s-app: cilium
  24 │     template:
  25 │         metadata:
  26 │             annotations:
  27 │                 cilium.io/cilium-configmap-checksum: be807b5457223052d9e69a28bd28dc0cdec9d86668a82d011167d4455f6042b2
  28 └                 container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: unconfined
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/tetragon (kubernetes)
===============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: DaemonSet 'tetragon' should not set 'spec.template.spec.hostNetwork' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/tetragon:21-125
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  21 ┌     revisionHistoryLimit: 10
  22 │     selector:
  23 │         matchLabels:
  24 │             app.kubernetes.io/instance: tetragon
  25 │             app.kubernetes.io/name: tetragon
  26 │     template:
  27 │         metadata:
  28 │             annotations:
  29 └                 checksum/configmap: 199fa351a7ceb5300ce37ec6be68b701309bab393c0986122e4f3a2446fb168b
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/cilium-operator (kubernetes)
=======================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

HIGH: Deployment 'cilium-operator' should not set 'spec.template.spec.hostNetwork' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Sharing the host’s network namespace permits processes in the pod to communicate with processes bound to the host’s loopback adapter.

See https://avd.aquasec.com/misconfig/ksv009
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/cilium-operator:21-134
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  21 ┌     progressDeadlineSeconds: 600
  22 │     replicas: 2
  23 │     revisionHistoryLimit: 10
  24 │     selector:
  25 │         matchLabels:
  26 │             io.cilium/app: operator
  27 │             name: cilium-operator
  28 │     strategy:
  29 └         rollingUpdate:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/hubble-ui (kubernetes)
=================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'backend' of Deployment 'hubble-ui' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/hubble-ui:77-91
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  77 ┌                 - env:
  78 │                     - name: EVENTS_SERVER_PORT
  79 │                       value: "8090"
  80 │                     - name: FLOWS_API_ADDR
  81 │                       value: hubble-relay:80
  82 │                   image: quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803
  83 │                   imagePullPolicy: IfNotPresent
  84 │                   name: backend
  85 └                   ports:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/hubble-ui (kubernetes)
=================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'frontend' of Deployment 'hubble-ui' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/hubble-ui:43-76
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  43 ┌                 - image: quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666
  44 │                   imagePullPolicy: IfNotPresent
  45 │                   livenessProbe:
  46 │                     failureThreshold: 3
  47 │                     httpGet:
  48 │                         path: /healthz
  49 │                         port: 8081
  50 │                         scheme: HTTP
  51 └                     periodSeconds: 10
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/local-path-provisioner (kubernetes)
==============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'local-path-provisioner' of Deployment 'local-path-provisioner' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/local-path-provisioner:18-36
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  18 ┌                 - command:
  19 │                     - local-path-provisioner
  20 │                     - --debug
  21 │                     - start
  22 │                     - --helper-image
  23 │                     - docker.io/kindest/local-path-helper:v20230510-486859a6
  24 │                     - --config
  25 │                     - /etc/config/config.json
  26 └                   env:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-ad-service (kubernetes)
==========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'ad-service' of Deployment 'unguard-ad-service' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-ad-service:36-63
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: ASPNETCORE_ENVIRONMENT
  38 │                       value: Production
  39 │                     - name: SERVER_PORT
  40 │                       value: "8082"
  41 │                     - name: API_PATH
  42 │                       value: /ad-service
  43 │                     - name: USER_AUTH_SERVICE_ADDRESS
  44 └                       value: unguard-user-auth-service
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-envoy-proxy (kubernetes)
===========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'envoy-proxy' of Deployment 'unguard-envoy-proxy' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-envoy-proxy:39-51
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  39 ┌                 - image: ghcr.io/dynatrace-oss/unguard/unguard-envoy-proxy:0.9.3
  40 │                   imagePullPolicy: IfNotPresent
  41 │                   name: envoy-proxy
  42 │                   ports:
  43 │                     - containerPort: 8080
  44 │                       name: http
  45 │                       protocol: TCP
  46 │                     - containerPort: 8081
  47 └                       name: health
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-frontend (kubernetes)
========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'frontend' of Deployment 'unguard-frontend' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-frontend:36-81
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: MICROBLOG_SERVICE_ADDRESS
  38 │                       value: unguard-microblog-service
  39 │                     - name: PROXY_SERVICE_ADDRESS
  40 │                       value: unguard-proxy-service
  41 │                     - name: USER_AUTH_SERVICE_ADDRESS
  42 │                       value: unguard-user-auth-service
  43 │                     - name: AD_SERVICE_ADDRESS
  44 └                       value: unguard-ad-service
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-like-service (kubernetes)
============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'like-service' of Deployment 'unguard-like-service' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-like-service:36-58
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8000"
  39 │                     - name: API_PATH
  40 │                       value: /like-service
  41 │                     - name: USER_AUTH_SERVICE_ADDRESS
  42 │                       value: unguard-user-auth-service
  43 │                     - name: MARIADB_PASSWORD
  44 └                       valueFrom:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-membership-service (kubernetes)
==================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'membership-service' of Deployment 'unguard-membership-service' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-membership-service:36-58
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: ASPNETCORE_ENVIRONMENT
  38 │                       value: Development
  39 │                     - name: SERVER_PORT
  40 │                       value: "8083"
  41 │                     - name: API_PATH
  42 │                       value: /membership-service
  43 │                     - name: MARIADB_SERVICE
  44 └                       value: unguard-mariadb
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-microblog-service (kubernetes)
=================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'microblog-service' of Deployment 'unguard-microblog-service' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-microblog-service:36-61
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8080"
  39 │                     - name: REDIS_SERVICE_ADDRESS
  40 │                       value: unguard-redis
  41 │                     - name: USER_AUTH_SERVICE_ADDRESS
  42 │                       value: unguard-user-auth-service
  43 │                     - name: OPENTRACING_JAEGER_ENABLED
  44 └                       value: "false"
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-payment-service (kubernetes)
===============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'payment-service' of Deployment 'unguard-payment-service' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-payment-service:36-69
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8084"
  39 │                     - name: API_PATH
  40 │                       value: /payment-service
  41 │                     - name: OTEL_LOGS_EXPORTER
  42 │                       value: none
  43 │                     - name: OTEL_METRICS_EXPORTER
  44 └                       value: none
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-profile-service (kubernetes)
===============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'profile-service' of Deployment 'unguard-profile-service' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-profile-service:36-69
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SPRING_DATASOURCE_URL
  38 │                       value: jdbc:h2:file:./database/bio
  39 │                     - name: SPRING_DATASOURCE_USERNAME
  40 │                       value: sa
  41 │                     - name: SPRING_DATASOURCE_PASSWORD
  42 │                       value: password
  43 │                     - name: OTEL_LOGS_EXPORTER
  44 └                       value: none
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-proxy-service (kubernetes)
=============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'proxy-service' of Deployment 'unguard-proxy-service' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-proxy-service:36-57
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8081"
  39 │                     - name: OPENTRACING_JAEGER_ENABLED
  40 │                       value: "false"
  41 │                     - name: JAEGER_SERVICE_NAME
  42 │                       value: unguard-proxy-service
  43 │                     - name: JAEGER_AGENT_HOST
  44 └                       value: jaeger-agent
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-redis (kubernetes)
=====================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'redis' of Deployment 'unguard-redis' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-redis:36-75
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - command:
  37 │                     - redis-server
  38 │                     - /config/redis.conf
  39 │                   env:
  40 │                     - name: MASTER
  41 │                       value: "true"
  42 │                   image: redis:5.0
  43 │                   imagePullPolicy: IfNotPresent
  44 └                   livenessProbe:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-status-service (kubernetes)
==============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'status-service' of Deployment 'unguard-status-service' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-status-service:36-60
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8083"
  39 │                     - name: API_PATH
  40 │                       value: /status-service
  41 │                     - name: KUBERNETES_NAMESPACE
  42 │                       value: unguard
  43 │                     - name: IGNORED_DEPLOYMENTS
  44 └                       value: unguard-user-simulator
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-user-auth-service (kubernetes)
=================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'user-auth-service' of Deployment 'unguard-user-auth-service' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-user-auth-service:36-64
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "9091"
  39 │                     - name: MARIADB_SERVICE
  40 │                       value: unguard-mariadb
  41 │                     - name: MARIADB_PASSWORD
  42 │                       valueFrom:
  43 │                         secretKeyRef:
  44 └                             key: mariadb-root-password
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Pod/etcd-kind-control-plane (kubernetes)
========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'etcd' of Pod 'etcd-kind-control-plane' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Pod/etcd-kind-control-plane:26-82
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  26 ┌         - command:
  27 │             - etcd
  28 │             - --advertise-client-urls=https://172.18.0.2:2379
  29 │             - --cert-file=/etc/kubernetes/pki/etcd/server.crt
  30 │             - --client-cert-auth=true
  31 │             - --data-dir=/var/lib/etcd
  32 │             - --experimental-initial-corrupt-check=true
  33 │             - --experimental-watch-progress-notify-interval=5s
  34 └             - --initial-advertise-peer-urls=https://172.18.0.2:2380
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Pod/kube-apiserver-kind-control-plane (kubernetes)
==================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'kube-apiserver' of Pod 'kube-apiserver-kind-control-plane' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Pod/kube-apiserver-kind-control-plane:26-118
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  26 ┌         - command:
  27 │             - kube-apiserver
  28 │             - --advertise-address=172.18.0.2
  29 │             - --allow-privileged=true
  30 │             - --audit-log-path=/var/log/kubernetes/kube-apiserver-audit.log
  31 │             - --audit-policy-file=/etc/kubernetes/policies/audit-policy.yaml
  32 │             - --authorization-mode=Node,RBAC
  33 │             - --client-ca-file=/etc/kubernetes/pki/ca.crt
  34 └             - --enable-admission-plugins=NodeRestriction
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Pod/kube-controller-manager-kind-control-plane (kubernetes)
===========================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'kube-controller-manager' of Pod 'kube-controller-manager-kind-control-plane' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Pod/kube-controller-manager-kind-control-plane:25-95
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  25 ┌         - command:
  26 │             - kube-controller-manager
  27 │             - --allocate-node-cidrs=true
  28 │             - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
  29 │             - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
  30 │             - --bind-address=127.0.0.1
  31 │             - --client-ca-file=/etc/kubernetes/pki/ca.crt
  32 │             - --cluster-cidr=10.244.0.0/16
  33 └             - --cluster-name=kind
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Pod/kube-scheduler-kind-control-plane (kubernetes)
==================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'kube-scheduler' of Pod 'kube-scheduler-kind-control-plane' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Pod/kube-scheduler-kind-control-plane:25-65
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  25 ┌         - command:
  26 │             - kube-scheduler
  27 │             - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
  28 │             - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
  29 │             - --bind-address=127.0.0.1
  30 │             - --kubeconfig=/etc/kubernetes/scheduler.conf
  31 │             - --leader-elect=true
  32 │           image: registry.k8s.io/kube-scheduler:v1.30.0
  33 └           imagePullPolicy: IfNotPresent
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



StatefulSet/kubeclarity-kubeclarity-postgresql (kubernetes)
===========================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'postgresql' of StatefulSet 'kubeclarity-kubeclarity-postgresql' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 StatefulSet/kubeclarity-kubeclarity-postgresql:57-133
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  57 ┌                 - env:
  58 │                     - name: BITNAMI_DEBUG
  59 │                       value: "false"
  60 │                     - name: POSTGRESQL_PORT_NUMBER
  61 │                       value: "5432"
  62 │                     - name: POSTGRESQL_VOLUME_DIR
  63 │                       value: /bitnami/postgresql
  64 │                     - name: PGDATA
  65 └                       value: /bitnami/postgresql/data
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/gadget (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'gadget' of DaemonSet 'gadget' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/gadget:33-139
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  33 ┌                 - command:
  34 │                     - /entrypoint
  35 │                   env:
  36 │                     - name: NODE_NAME
  37 │                       valueFrom:
  38 │                         fieldRef:
  39 │                             apiVersion: v1
  40 │                             fieldPath: spec.nodeName
  41 └                     - name: GADGET_POD_UID
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'apply-sysctl-overwrites' of DaemonSet 'cilium' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:277-308
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 277 ┌                 - command:
 278 │                     - sh
 279 │                     - -ec
 280 │                     - |
 281 │                       cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
 282 │                       nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
 283 │                       rm /hostbin/cilium-sysctlfix
 284 │                   env:
 285 └                     - name: BIN_PATH
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'cilium-agent' of DaemonSet 'cilium' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:49-212
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  49 ┌                 - args:
  50 │                     - --config-dir=/tmp/cilium/config-map
  51 │                   command:
  52 │                     - cilium-agent
  53 │                   env:
  54 │                     - name: K8S_NODE_NAME
  55 │                       valueFrom:
  56 │                         fieldRef:
  57 └                             apiVersion: v1
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'clean-cilium-state' of DaemonSet 'cilium' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:327-377
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 327 ┌                 - command:
 328 │                     - /init-container.sh
 329 │                   env:
 330 │                     - name: CILIUM_ALL_STATE
 331 │                       valueFrom:
 332 │                         configMapKeyRef:
 333 │                             key: clean-cilium-state
 334 │                             name: cilium-config
 335 └                             optional: true
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'config' of DaemonSet 'cilium' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:216-242
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 216 ┌                 - command:
 217 │                     - cilium-dbg
 218 │                     - build-config
 219 │                   env:
 220 │                     - name: K8S_NODE_NAME
 221 │                       valueFrom:
 222 │                         fieldRef:
 223 │                             apiVersion: v1
 224 └                             fieldPath: spec.nodeName
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'install-cni-binaries' of DaemonSet 'cilium' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:378-398
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 378 ┌                 - command:
 379 │                     - /install-plugin.sh
 380 │                   image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
 381 │                   imagePullPolicy: IfNotPresent
 382 │                   name: install-cni-binaries
 383 │                   resources:
 384 │                     requests:
 385 │                         cpu: 100m
 386 └                         memory: 10Mi
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'mount-bpf-fs' of DaemonSet 'cilium' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:309-326
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 309 ┌                 - args:
 310 │                     - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
 311 │                   command:
 312 │                     - /bin/bash
 313 │                     - -c
 314 │                     - --
 315 │                   image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
 316 │                   imagePullPolicy: IfNotPresent
 317 └                   name: mount-bpf-fs
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'mount-cgroup' of DaemonSet 'cilium' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:243-276
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 243 ┌                 - command:
 244 │                     - sh
 245 │                     - -ec
 246 │                     - |
 247 │                       cp /usr/bin/cilium-mount /hostbin/cilium-mount;
 248 │                       nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
 249 │                       rm /hostbin/cilium-mount
 250 │                   env:
 251 └                     - name: CGROUP_ROOT
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/tetragon (kubernetes)
===============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'export-stdout' of DaemonSet 'tetragon' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/tetragon:39-52
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  39 ┌                 - args:
  40 │                     - /var/run/cilium/tetragon/tetragon.log
  41 │                   command:
  42 │                     - hubble-export-stdout
  43 │                   image: quay.io/cilium/hubble-export-stdout:v1.0.4
  44 │                   imagePullPolicy: IfNotPresent
  45 │                   name: export-stdout
  46 │                   resources: {}
  47 └                   securityContext: {}
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/tetragon (kubernetes)
===============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'tetragon' of DaemonSet 'tetragon' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/tetragon:53-89
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  53 ┌                 - args:
  54 │                     - --config-dir=/etc/tetragon/tetragon.conf.d/
  55 │                   env:
  56 │                     - name: NODE_NAME
  57 │                       valueFrom:
  58 │                         fieldRef:
  59 │                             apiVersion: v1
  60 │                             fieldPath: spec.nodeName
  61 └                   image: quay.io/cilium/tetragon:v1.1.2
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



CronJob/unguard-user-simulator (kubernetes)
===========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'unguard-user-simulator' of CronJob 'unguard-user-simulator' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 CronJob/unguard-user-simulator:29-45
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  29 ┌                         - env:
  30 │                             - name: FRONTEND_ADDR
  31 │                               value: unguard-envoy-proxy:8080/ui
  32 │                             - name: SIMULATE_PRIVATE_RANGES
  33 │                               value: "false"
  34 │                           image: ghcr.io/dynatrace-oss/unguard/unguard-user-simulator:0.9.3
  35 │                           imagePullPolicy: IfNotPresent
  36 │                           name: unguard-user-simulator
  37 └                           resources:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/cilium-operator (kubernetes)
=======================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'cilium-operator' of Deployment 'cilium-operator' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/cilium-operator:55-116
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  55 ┌                 - args:
  56 │                     - --config-dir=/tmp/cilium/config-map
  57 │                     - --debug=$(CILIUM_DEBUG)
  58 │                   command:
  59 │                     - cilium-operator-generic
  60 │                   env:
  61 │                     - name: K8S_NODE_NAME
  62 │                       valueFrom:
  63 └                         fieldRef:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/hubble-relay (kubernetes)
====================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Container 'hubble-relay' of Deployment 'hubble-relay' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/hubble-relay:48-99
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  48 ┌                 - args:
  49 │                     - serve
  50 │                   command:
  51 │                     - hubble-relay
  52 │                   image: quay.io/cilium/hubble-relay:v1.15.4@sha256:03ad857feaf52f1b4774c29614f42a50b370680eb7d0bfbc1ae065df84b1070a
  53 │                   imagePullPolicy: IfNotPresent
  54 │                   livenessProbe:
  55 │                     failureThreshold: 3
  56 └                     grpc:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/gadget (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Container 'gadget' of DaemonSet 'gadget' should specify an AppArmor profile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'AppArmor', the AppArmor key must be set to the runtime/default profile or to be undefined.

See https://avd.aquasec.com/misconfig/ksv002
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/gadget:33-139
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  33 ┌                 - command:
  34 │                     - /entrypoint
  35 │                   env:
  36 │                     - name: NODE_NAME
  37 │                       valueFrom:
  38 │                         fieldRef:
  39 │                             apiVersion: v1
  40 │                             fieldPath: spec.nodeName
  41 └                     - name: GADGET_POD_UID
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Container 'apply-sysctl-overwrites' of DaemonSet 'cilium' should specify an AppArmor profile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'AppArmor', the AppArmor key must be set to the runtime/default profile or to be undefined.

See https://avd.aquasec.com/misconfig/ksv002
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:277-308
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 277 ┌                 - command:
 278 │                     - sh
 279 │                     - -ec
 280 │                     - |
 281 │                       cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
 282 │                       nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
 283 │                       rm /hostbin/cilium-sysctlfix
 284 │                   env:
 285 └                     - name: BIN_PATH
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Container 'cilium-agent' of DaemonSet 'cilium' should specify an AppArmor profile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'AppArmor', the AppArmor key must be set to the runtime/default profile or to be undefined.

See https://avd.aquasec.com/misconfig/ksv002
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:49-212
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  49 ┌                 - args:
  50 │                     - --config-dir=/tmp/cilium/config-map
  51 │                   command:
  52 │                     - cilium-agent
  53 │                   env:
  54 │                     - name: K8S_NODE_NAME
  55 │                       valueFrom:
  56 │                         fieldRef:
  57 └                             apiVersion: v1
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Container 'clean-cilium-state' of DaemonSet 'cilium' should specify an AppArmor profile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'AppArmor', the AppArmor key must be set to the runtime/default profile or to be undefined.

See https://avd.aquasec.com/misconfig/ksv002
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:327-377
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 327 ┌                 - command:
 328 │                     - /init-container.sh
 329 │                   env:
 330 │                     - name: CILIUM_ALL_STATE
 331 │                       valueFrom:
 332 │                         configMapKeyRef:
 333 │                             key: clean-cilium-state
 334 │                             name: cilium-config
 335 └                             optional: true
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Container 'mount-cgroup' of DaemonSet 'cilium' should specify an AppArmor profile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'AppArmor', the AppArmor key must be set to the runtime/default profile or to be undefined.

See https://avd.aquasec.com/misconfig/ksv002
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:243-276
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 243 ┌                 - command:
 244 │                     - sh
 245 │                     - -ec
 246 │                     - |
 247 │                       cp /usr/bin/cilium-mount /hostbin/cilium-mount;
 248 │                       nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
 249 │                       rm /hostbin/cilium-mount
 250 │                   env:
 251 └                     - name: CGROUP_ROOT
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/hubble-ui (kubernetes)
=================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/hubble-ui:43-76
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  43 ┌                 - image: quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666
  44 │                   imagePullPolicy: IfNotPresent
  45 │                   livenessProbe:
  46 │                     failureThreshold: 3
  47 │                     httpGet:
  48 │                         path: /healthz
  49 │                         port: 8081
  50 │                         scheme: HTTP
  51 └                     periodSeconds: 10
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/hubble-ui (kubernetes)
=================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/hubble-ui:77-91
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  77 ┌                 - env:
  78 │                     - name: EVENTS_SERVER_PORT
  79 │                       value: "8090"
  80 │                     - name: FLOWS_API_ADDR
  81 │                       value: hubble-relay:80
  82 │                   image: quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803
  83 │                   imagePullPolicy: IfNotPresent
  84 │                   name: backend
  85 └                   ports:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/tetragon-operator (kubernetes)
=========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/tetragon-operator:44-94
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  44 ┌                 - args:
  45 │                     - serve
  46 │                     - --config-dir=/etc/tetragon/operator.conf.d/
  47 │                     - --metrics-bind-address=:2113
  48 │                   command:
  49 │                     - /usr/bin/tetragon-operator
  50 │                   image: quay.io/cilium/tetragon-operator:v1.1.2
  51 │                   imagePullPolicy: IfNotPresent
  52 └                   livenessProbe:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/coredns (kubernetes)
===============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/coredns:45-99
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  45 ┌                 - args:
  46 │                     - -conf
  47 │                     - /etc/coredns/Corefile
  48 │                   image: registry.k8s.io/coredns/coredns:v1.11.1
  49 │                   imagePullPolicy: IfNotPresent
  50 │                   livenessProbe:
  51 │                     failureThreshold: 5
  52 │                     httpGet:
  53 └                         path: /health
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/kubeclarity-kubeclarity-grype-server (kubernetes)
============================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/kubeclarity-kubeclarity-grype-server:38-88
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  38 ┌                 - args:
  39 │                     - run
  40 │                     - --log-level
  41 │                     - warning
  42 │                   env:
  43 │                     - name: DB_ROOT_DIR
  44 │                       value: /tmp/
  45 │                   image: ghcr.io/openclarity/grype-server:v0.6.0
  46 └                   imagePullPolicy: Always
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/kubeclarity-kubeclarity-sbom-db (kubernetes)
=======================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/kubeclarity-kubeclarity-sbom-db:38-85
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  38 ┌                 - args:
  39 │                     - run
  40 │                     - --log-level
  41 │                     - warning
  42 │                   image: ghcr.io/openclarity/kubeclarity-sbom-db:v2.23.3
  43 │                   imagePullPolicy: Always
  44 │                   livenessProbe:
  45 │                     failureThreshold: 5
  46 └                     httpGet:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/local-path-provisioner (kubernetes)
==============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/local-path-provisioner:18-36
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  18 ┌                 - command:
  19 │                     - local-path-provisioner
  20 │                     - --debug
  21 │                     - start
  22 │                     - --helper-image
  23 │                     - docker.io/kindest/local-path-helper:v20230510-486859a6
  24 │                     - --config
  25 │                     - /etc/config/config.json
  26 └                   env:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-ad-service (kubernetes)
==========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-ad-service:36-63
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: ASPNETCORE_ENVIRONMENT
  38 │                       value: Production
  39 │                     - name: SERVER_PORT
  40 │                       value: "8082"
  41 │                     - name: API_PATH
  42 │                       value: /ad-service
  43 │                     - name: USER_AUTH_SERVICE_ADDRESS
  44 └                       value: unguard-user-auth-service
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-envoy-proxy (kubernetes)
===========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-envoy-proxy:39-51
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  39 ┌                 - image: ghcr.io/dynatrace-oss/unguard/unguard-envoy-proxy:0.9.3
  40 │                   imagePullPolicy: IfNotPresent
  41 │                   name: envoy-proxy
  42 │                   ports:
  43 │                     - containerPort: 8080
  44 │                       name: http
  45 │                       protocol: TCP
  46 │                     - containerPort: 8081
  47 └                       name: health
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-frontend (kubernetes)
========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-frontend:36-81
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: MICROBLOG_SERVICE_ADDRESS
  38 │                       value: unguard-microblog-service
  39 │                     - name: PROXY_SERVICE_ADDRESS
  40 │                       value: unguard-proxy-service
  41 │                     - name: USER_AUTH_SERVICE_ADDRESS
  42 │                       value: unguard-user-auth-service
  43 │                     - name: AD_SERVICE_ADDRESS
  44 └                       value: unguard-ad-service
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-like-service (kubernetes)
============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-like-service:36-58
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8000"
  39 │                     - name: API_PATH
  40 │                       value: /like-service
  41 │                     - name: USER_AUTH_SERVICE_ADDRESS
  42 │                       value: unguard-user-auth-service
  43 │                     - name: MARIADB_PASSWORD
  44 └                       valueFrom:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-membership-service (kubernetes)
==================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-membership-service:36-58
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: ASPNETCORE_ENVIRONMENT
  38 │                       value: Development
  39 │                     - name: SERVER_PORT
  40 │                       value: "8083"
  41 │                     - name: API_PATH
  42 │                       value: /membership-service
  43 │                     - name: MARIADB_SERVICE
  44 └                       value: unguard-mariadb
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-microblog-service (kubernetes)
=================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-microblog-service:36-61
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8080"
  39 │                     - name: REDIS_SERVICE_ADDRESS
  40 │                       value: unguard-redis
  41 │                     - name: USER_AUTH_SERVICE_ADDRESS
  42 │                       value: unguard-user-auth-service
  43 │                     - name: OPENTRACING_JAEGER_ENABLED
  44 └                       value: "false"
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-payment-service (kubernetes)
===============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-payment-service:36-69
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8084"
  39 │                     - name: API_PATH
  40 │                       value: /payment-service
  41 │                     - name: OTEL_LOGS_EXPORTER
  42 │                       value: none
  43 │                     - name: OTEL_METRICS_EXPORTER
  44 └                       value: none
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-profile-service (kubernetes)
===============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-profile-service:36-69
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SPRING_DATASOURCE_URL
  38 │                       value: jdbc:h2:file:./database/bio
  39 │                     - name: SPRING_DATASOURCE_USERNAME
  40 │                       value: sa
  41 │                     - name: SPRING_DATASOURCE_PASSWORD
  42 │                       value: password
  43 │                     - name: OTEL_LOGS_EXPORTER
  44 └                       value: none
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-proxy-service (kubernetes)
=============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-proxy-service:36-57
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8081"
  39 │                     - name: OPENTRACING_JAEGER_ENABLED
  40 │                       value: "false"
  41 │                     - name: JAEGER_SERVICE_NAME
  42 │                       value: unguard-proxy-service
  43 │                     - name: JAEGER_AGENT_HOST
  44 └                       value: jaeger-agent
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-redis (kubernetes)
=====================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-redis:36-75
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - command:
  37 │                     - redis-server
  38 │                     - /config/redis.conf
  39 │                   env:
  40 │                     - name: MASTER
  41 │                       value: "true"
  42 │                   image: redis:5.0
  43 │                   imagePullPolicy: IfNotPresent
  44 └                   livenessProbe:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-status-service (kubernetes)
==============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-status-service:36-60
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8083"
  39 │                     - name: API_PATH
  40 │                       value: /status-service
  41 │                     - name: KUBERNETES_NAMESPACE
  42 │                       value: unguard
  43 │                     - name: IGNORED_DEPLOYMENTS
  44 └                       value: unguard-user-simulator
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-user-auth-service (kubernetes)
=================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-user-auth-service:36-64
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "9091"
  39 │                     - name: MARIADB_SERVICE
  40 │                       value: unguard-mariadb
  41 │                     - name: MARIADB_PASSWORD
  42 │                       valueFrom:
  43 │                         secretKeyRef:
  44 └                             key: mariadb-root-password
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



StatefulSet/kubeclarity-kubeclarity-postgresql (kubernetes)
===========================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 StatefulSet/kubeclarity-kubeclarity-postgresql:57-133
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  57 ┌                 - env:
  58 │                     - name: BITNAMI_DEBUG
  59 │                       value: "false"
  60 │                     - name: POSTGRESQL_PORT_NUMBER
  61 │                       value: "5432"
  62 │                     - name: POSTGRESQL_VOLUME_DIR
  63 │                       value: /bitnami/postgresql
  64 │                     - name: PGDATA
  65 └                       value: /bitnami/postgresql/data
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



StatefulSet/unguard-mariadb (kubernetes)
========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 StatefulSet/unguard-mariadb:56-118
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  56 ┌                 - env:
  57 │                     - name: BITNAMI_DEBUG
  58 │                       value: "false"
  59 │                     - name: MARIADB_ROOT_PASSWORD
  60 │                       valueFrom:
  61 │                         secretKeyRef:
  62 │                             key: mariadb-root-password
  63 │                             name: unguard-mariadb
  64 └                     - name: MARIADB_DATABASE
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/gadget (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/gadget:33-139
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  33 ┌                 - command:
  34 │                     - /entrypoint
  35 │                   env:
  36 │                     - name: NODE_NAME
  37 │                       valueFrom:
  38 │                         fieldRef:
  39 │                             apiVersion: v1
  40 │                             fieldPath: spec.nodeName
  41 └                     - name: GADGET_POD_UID
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:277-308
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 277 ┌                 - command:
 278 │                     - sh
 279 │                     - -ec
 280 │                     - |
 281 │                       cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
 282 │                       nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
 283 │                       rm /hostbin/cilium-sysctlfix
 284 │                   env:
 285 └                     - name: BIN_PATH
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:378-398
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 378 ┌                 - command:
 379 │                     - /install-plugin.sh
 380 │                   image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
 381 │                   imagePullPolicy: IfNotPresent
 382 │                   name: install-cni-binaries
 383 │                   resources:
 384 │                     requests:
 385 │                         cpu: 100m
 386 └                         memory: 10Mi
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:49-212
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  49 ┌                 - args:
  50 │                     - --config-dir=/tmp/cilium/config-map
  51 │                   command:
  52 │                     - cilium-agent
  53 │                   env:
  54 │                     - name: K8S_NODE_NAME
  55 │                       valueFrom:
  56 │                         fieldRef:
  57 └                             apiVersion: v1
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:216-242
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 216 ┌                 - command:
 217 │                     - cilium-dbg
 218 │                     - build-config
 219 │                   env:
 220 │                     - name: K8S_NODE_NAME
 221 │                       valueFrom:
 222 │                         fieldRef:
 223 │                             apiVersion: v1
 224 └                             fieldPath: spec.nodeName
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:243-276
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 243 ┌                 - command:
 244 │                     - sh
 245 │                     - -ec
 246 │                     - |
 247 │                       cp /usr/bin/cilium-mount /hostbin/cilium-mount;
 248 │                       nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
 249 │                       rm /hostbin/cilium-mount
 250 │                   env:
 251 └                     - name: CGROUP_ROOT
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:309-326
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 309 ┌                 - args:
 310 │                     - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
 311 │                   command:
 312 │                     - /bin/bash
 313 │                     - -c
 314 │                     - --
 315 │                   image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
 316 │                   imagePullPolicy: IfNotPresent
 317 └                   name: mount-bpf-fs
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:327-377
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 327 ┌                 - command:
 328 │                     - /init-container.sh
 329 │                   env:
 330 │                     - name: CILIUM_ALL_STATE
 331 │                       valueFrom:
 332 │                         configMapKeyRef:
 333 │                             key: clean-cilium-state
 334 │                             name: cilium-config
 335 └                             optional: true
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/tetragon (kubernetes)
===============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/tetragon:39-52
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  39 ┌                 - args:
  40 │                     - /var/run/cilium/tetragon/tetragon.log
  41 │                   command:
  42 │                     - hubble-export-stdout
  43 │                   image: quay.io/cilium/hubble-export-stdout:v1.0.4
  44 │                   imagePullPolicy: IfNotPresent
  45 │                   name: export-stdout
  46 │                   resources: {}
  47 └                   securityContext: {}
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/tetragon (kubernetes)
===============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/tetragon:53-89
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  53 ┌                 - args:
  54 │                     - --config-dir=/etc/tetragon/tetragon.conf.d/
  55 │                   env:
  56 │                     - name: NODE_NAME
  57 │                       valueFrom:
  58 │                         fieldRef:
  59 │                             apiVersion: v1
  60 │                             fieldPath: spec.nodeName
  61 └                   image: quay.io/cilium/tetragon:v1.1.2
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



CronJob/unguard-user-simulator (kubernetes)
===========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 CronJob/unguard-user-simulator:29-45
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  29 ┌                         - env:
  30 │                             - name: FRONTEND_ADDR
  31 │                               value: unguard-envoy-proxy:8080/ui
  32 │                             - name: SIMULATE_PRIVATE_RANGES
  33 │                               value: "false"
  34 │                           image: ghcr.io/dynatrace-oss/unguard/unguard-user-simulator:0.9.3
  35 │                           imagePullPolicy: IfNotPresent
  36 │                           name: unguard-user-simulator
  37 └                           resources:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/cilium-operator (kubernetes)
=======================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/cilium-operator:55-116
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  55 ┌                 - args:
  56 │                     - --config-dir=/tmp/cilium/config-map
  57 │                     - --debug=$(CILIUM_DEBUG)
  58 │                   command:
  59 │                     - cilium-operator-generic
  60 │                   env:
  61 │                     - name: K8S_NODE_NAME
  62 │                       valueFrom:
  63 └                         fieldRef:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/kubeclarity-kubeclarity (kubernetes)
===============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/kubeclarity-kubeclarity:137-182
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 137 ┌                 - command:
 138 │                     - sh
 139 │                     - -c
 140 │                     - until pg_isready -h "$DB_HOST" -p "$DB_PORT_NUMBER" -U "$DB_USER" -d "dbname=$DB_NAME"; do echo waiting for database; sleep 2; done;
 141 │                   env:
 142 │                     - name: DB_NAME
 143 │                       valueFrom:
 144 │                         secretKeyRef:
 145 └                             key: postgres-database
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/kubeclarity-kubeclarity (kubernetes)
===============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/kubeclarity-kubeclarity:39-134
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  39 ┌                 - args:
  40 │                     - run
  41 │                     - --log-level
  42 │                     - warning
  43 │                   env:
  44 │                     - name: ENABLE_DB_INFO_LOGS
  45 │                       value: "false"
  46 │                     - name: DB_NAME
  47 └                       valueFrom:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/kubeclarity-kubeclarity (kubernetes)
===============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/kubeclarity-kubeclarity:183-210
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 183 ┌                 - args:
 184 │                     - /bin/sh
 185 │                     - -c
 186 │                     - |
 187 │                       set -x; while [ $(curl -sw '%{http_code}' "http://kubeclarity-kubeclarity-sbom-db:8081/healthz/ready" -o /dev/null) -ne 200 ]; do
 188 │                         echo waiting for sbom database; sleep 2;
 189 │                       done;
 190 │                   image: docker.io/curlimages/curl:7.87.0
 191 └                   imagePullPolicy: IfNotPresent
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/kubeclarity-kubeclarity (kubernetes)
===============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/kubeclarity-kubeclarity:211-238
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 211 ┌                 - args:
 212 │                     - /bin/sh
 213 │                     - -c
 214 │                     - |
 215 │                       set -x; while [ $(curl -sw '%{http_code}' "http://kubeclarity-kubeclarity-grype-server:8080/healthz/ready" -o /dev/null) -ne 200 ]; do
 216 │                         echo waiting for grype-server to be ready; sleep 2;
 217 │                       done;
 218 │                   image: docker.io/curlimages/curl:7.87.0
 219 └                   imagePullPolicy: IfNotPresent
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/hubble-relay (kubernetes)
====================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/hubble-relay:48-99
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  48 ┌                 - args:
  49 │                     - serve
  50 │                   command:
  51 │                     - hubble-relay
  52 │                   image: quay.io/cilium/hubble-relay:v1.15.4@sha256:03ad857feaf52f1b4774c29614f42a50b370680eb7d0bfbc1ae065df84b1070a
  53 │                   imagePullPolicy: IfNotPresent
  54 │                   livenessProbe:
  55 │                     failureThreshold: 3
  56 └                     grpc:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/hubble-ui (kubernetes)
=================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/hubble-ui:43-76
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  43 ┌                 - image: quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666
  44 │                   imagePullPolicy: IfNotPresent
  45 │                   livenessProbe:
  46 │                     failureThreshold: 3
  47 │                     httpGet:
  48 │                         path: /healthz
  49 │                         port: 8081
  50 │                         scheme: HTTP
  51 └                     periodSeconds: 10
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/hubble-ui (kubernetes)
=================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/hubble-ui:77-91
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  77 ┌                 - env:
  78 │                     - name: EVENTS_SERVER_PORT
  79 │                       value: "8090"
  80 │                     - name: FLOWS_API_ADDR
  81 │                       value: hubble-relay:80
  82 │                   image: quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803
  83 │                   imagePullPolicy: IfNotPresent
  84 │                   name: backend
  85 └                   ports:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/tetragon-operator (kubernetes)
=========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/tetragon-operator:44-94
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  44 ┌                 - args:
  45 │                     - serve
  46 │                     - --config-dir=/etc/tetragon/operator.conf.d/
  47 │                     - --metrics-bind-address=:2113
  48 │                   command:
  49 │                     - /usr/bin/tetragon-operator
  50 │                   image: quay.io/cilium/tetragon-operator:v1.1.2
  51 │                   imagePullPolicy: IfNotPresent
  52 └                   livenessProbe:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/coredns (kubernetes)
===============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/coredns:45-99
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  45 ┌                 - args:
  46 │                     - -conf
  47 │                     - /etc/coredns/Corefile
  48 │                   image: registry.k8s.io/coredns/coredns:v1.11.1
  49 │                   imagePullPolicy: IfNotPresent
  50 │                   livenessProbe:
  51 │                     failureThreshold: 5
  52 │                     httpGet:
  53 └                         path: /health
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/kubeclarity-kubeclarity-grype-server (kubernetes)
============================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/kubeclarity-kubeclarity-grype-server:38-88
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  38 ┌                 - args:
  39 │                     - run
  40 │                     - --log-level
  41 │                     - warning
  42 │                   env:
  43 │                     - name: DB_ROOT_DIR
  44 │                       value: /tmp/
  45 │                   image: ghcr.io/openclarity/grype-server:v0.6.0
  46 └                   imagePullPolicy: Always
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/kubeclarity-kubeclarity-sbom-db (kubernetes)
=======================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/kubeclarity-kubeclarity-sbom-db:38-85
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  38 ┌                 - args:
  39 │                     - run
  40 │                     - --log-level
  41 │                     - warning
  42 │                   image: ghcr.io/openclarity/kubeclarity-sbom-db:v2.23.3
  43 │                   imagePullPolicy: Always
  44 │                   livenessProbe:
  45 │                     failureThreshold: 5
  46 └                     httpGet:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/local-path-provisioner (kubernetes)
==============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/local-path-provisioner:18-36
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  18 ┌                 - command:
  19 │                     - local-path-provisioner
  20 │                     - --debug
  21 │                     - start
  22 │                     - --helper-image
  23 │                     - docker.io/kindest/local-path-helper:v20230510-486859a6
  24 │                     - --config
  25 │                     - /etc/config/config.json
  26 └                   env:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-ad-service (kubernetes)
==========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-ad-service:36-63
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: ASPNETCORE_ENVIRONMENT
  38 │                       value: Production
  39 │                     - name: SERVER_PORT
  40 │                       value: "8082"
  41 │                     - name: API_PATH
  42 │                       value: /ad-service
  43 │                     - name: USER_AUTH_SERVICE_ADDRESS
  44 └                       value: unguard-user-auth-service
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-envoy-proxy (kubernetes)
===========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-envoy-proxy:39-51
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  39 ┌                 - image: ghcr.io/dynatrace-oss/unguard/unguard-envoy-proxy:0.9.3
  40 │                   imagePullPolicy: IfNotPresent
  41 │                   name: envoy-proxy
  42 │                   ports:
  43 │                     - containerPort: 8080
  44 │                       name: http
  45 │                       protocol: TCP
  46 │                     - containerPort: 8081
  47 └                       name: health
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-frontend (kubernetes)
========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-frontend:36-81
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: MICROBLOG_SERVICE_ADDRESS
  38 │                       value: unguard-microblog-service
  39 │                     - name: PROXY_SERVICE_ADDRESS
  40 │                       value: unguard-proxy-service
  41 │                     - name: USER_AUTH_SERVICE_ADDRESS
  42 │                       value: unguard-user-auth-service
  43 │                     - name: AD_SERVICE_ADDRESS
  44 └                       value: unguard-ad-service
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-like-service (kubernetes)
============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-like-service:36-58
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8000"
  39 │                     - name: API_PATH
  40 │                       value: /like-service
  41 │                     - name: USER_AUTH_SERVICE_ADDRESS
  42 │                       value: unguard-user-auth-service
  43 │                     - name: MARIADB_PASSWORD
  44 └                       valueFrom:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-membership-service (kubernetes)
==================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-membership-service:36-58
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: ASPNETCORE_ENVIRONMENT
  38 │                       value: Development
  39 │                     - name: SERVER_PORT
  40 │                       value: "8083"
  41 │                     - name: API_PATH
  42 │                       value: /membership-service
  43 │                     - name: MARIADB_SERVICE
  44 └                       value: unguard-mariadb
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-microblog-service (kubernetes)
=================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-microblog-service:36-61
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8080"
  39 │                     - name: REDIS_SERVICE_ADDRESS
  40 │                       value: unguard-redis
  41 │                     - name: USER_AUTH_SERVICE_ADDRESS
  42 │                       value: unguard-user-auth-service
  43 │                     - name: OPENTRACING_JAEGER_ENABLED
  44 └                       value: "false"
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-payment-service (kubernetes)
===============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-payment-service:36-69
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8084"
  39 │                     - name: API_PATH
  40 │                       value: /payment-service
  41 │                     - name: OTEL_LOGS_EXPORTER
  42 │                       value: none
  43 │                     - name: OTEL_METRICS_EXPORTER
  44 └                       value: none
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-profile-service (kubernetes)
===============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-profile-service:36-69
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SPRING_DATASOURCE_URL
  38 │                       value: jdbc:h2:file:./database/bio
  39 │                     - name: SPRING_DATASOURCE_USERNAME
  40 │                       value: sa
  41 │                     - name: SPRING_DATASOURCE_PASSWORD
  42 │                       value: password
  43 │                     - name: OTEL_LOGS_EXPORTER
  44 └                       value: none
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-proxy-service (kubernetes)
=============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-proxy-service:36-57
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8081"
  39 │                     - name: OPENTRACING_JAEGER_ENABLED
  40 │                       value: "false"
  41 │                     - name: JAEGER_SERVICE_NAME
  42 │                       value: unguard-proxy-service
  43 │                     - name: JAEGER_AGENT_HOST
  44 └                       value: jaeger-agent
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-redis (kubernetes)
=====================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-redis:36-75
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - command:
  37 │                     - redis-server
  38 │                     - /config/redis.conf
  39 │                   env:
  40 │                     - name: MASTER
  41 │                       value: "true"
  42 │                   image: redis:5.0
  43 │                   imagePullPolicy: IfNotPresent
  44 └                   livenessProbe:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-status-service (kubernetes)
==============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-status-service:36-60
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "8083"
  39 │                     - name: API_PATH
  40 │                       value: /status-service
  41 │                     - name: KUBERNETES_NAMESPACE
  42 │                       value: unguard
  43 │                     - name: IGNORED_DEPLOYMENTS
  44 └                       value: unguard-user-simulator
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/unguard-user-auth-service (kubernetes)
=================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/unguard-user-auth-service:36-64
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  36 ┌                 - env:
  37 │                     - name: SERVER_PORT
  38 │                       value: "9091"
  39 │                     - name: MARIADB_SERVICE
  40 │                       value: unguard-mariadb
  41 │                     - name: MARIADB_PASSWORD
  42 │                       valueFrom:
  43 │                         secretKeyRef:
  44 └                             key: mariadb-root-password
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



StatefulSet/kubeclarity-kubeclarity-postgresql (kubernetes)
===========================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 StatefulSet/kubeclarity-kubeclarity-postgresql:57-133
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  57 ┌                 - env:
  58 │                     - name: BITNAMI_DEBUG
  59 │                       value: "false"
  60 │                     - name: POSTGRESQL_PORT_NUMBER
  61 │                       value: "5432"
  62 │                     - name: POSTGRESQL_VOLUME_DIR
  63 │                       value: /bitnami/postgresql
  64 │                     - name: PGDATA
  65 └                       value: /bitnami/postgresql/data
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



StatefulSet/unguard-mariadb (kubernetes)
========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 StatefulSet/unguard-mariadb:56-118
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  56 ┌                 - env:
  57 │                     - name: BITNAMI_DEBUG
  58 │                       value: "false"
  59 │                     - name: MARIADB_ROOT_PASSWORD
  60 │                       valueFrom:
  61 │                         secretKeyRef:
  62 │                             key: mariadb-root-password
  63 │                             name: unguard-mariadb
  64 └                     - name: MARIADB_DATABASE
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/gadget (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/gadget:33-139
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  33 ┌                 - command:
  34 │                     - /entrypoint
  35 │                   env:
  36 │                     - name: NODE_NAME
  37 │                       valueFrom:
  38 │                         fieldRef:
  39 │                             apiVersion: v1
  40 │                             fieldPath: spec.nodeName
  41 └                     - name: GADGET_POD_UID
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:277-308
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 277 ┌                 - command:
 278 │                     - sh
 279 │                     - -ec
 280 │                     - |
 281 │                       cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
 282 │                       nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
 283 │                       rm /hostbin/cilium-sysctlfix
 284 │                   env:
 285 └                     - name: BIN_PATH
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:378-398
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 378 ┌                 - command:
 379 │                     - /install-plugin.sh
 380 │                   image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
 381 │                   imagePullPolicy: IfNotPresent
 382 │                   name: install-cni-binaries
 383 │                   resources:
 384 │                     requests:
 385 │                         cpu: 100m
 386 └                         memory: 10Mi
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:49-212
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  49 ┌                 - args:
  50 │                     - --config-dir=/tmp/cilium/config-map
  51 │                   command:
  52 │                     - cilium-agent
  53 │                   env:
  54 │                     - name: K8S_NODE_NAME
  55 │                       valueFrom:
  56 │                         fieldRef:
  57 └                             apiVersion: v1
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:216-242
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 216 ┌                 - command:
 217 │                     - cilium-dbg
 218 │                     - build-config
 219 │                   env:
 220 │                     - name: K8S_NODE_NAME
 221 │                       valueFrom:
 222 │                         fieldRef:
 223 │                             apiVersion: v1
 224 └                             fieldPath: spec.nodeName
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:243-276
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 243 ┌                 - command:
 244 │                     - sh
 245 │                     - -ec
 246 │                     - |
 247 │                       cp /usr/bin/cilium-mount /hostbin/cilium-mount;
 248 │                       nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
 249 │                       rm /hostbin/cilium-mount
 250 │                   env:
 251 └                     - name: CGROUP_ROOT
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:309-326
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 309 ┌                 - args:
 310 │                     - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
 311 │                   command:
 312 │                     - /bin/bash
 313 │                     - -c
 314 │                     - --
 315 │                   image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
 316 │                   imagePullPolicy: IfNotPresent
 317 └                   name: mount-bpf-fs
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:327-377
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 327 ┌                 - command:
 328 │                     - /init-container.sh
 329 │                   env:
 330 │                     - name: CILIUM_ALL_STATE
 331 │                       valueFrom:
 332 │                         configMapKeyRef:
 333 │                             key: clean-cilium-state
 334 │                             name: cilium-config
 335 └                             optional: true
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/tetragon (kubernetes)
===============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/tetragon:39-52
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  39 ┌                 - args:
  40 │                     - /var/run/cilium/tetragon/tetragon.log
  41 │                   command:
  42 │                     - hubble-export-stdout
  43 │                   image: quay.io/cilium/hubble-export-stdout:v1.0.4
  44 │                   imagePullPolicy: IfNotPresent
  45 │                   name: export-stdout
  46 │                   resources: {}
  47 └                   securityContext: {}
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/tetragon (kubernetes)
===============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/tetragon:53-89
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  53 ┌                 - args:
  54 │                     - --config-dir=/etc/tetragon/tetragon.conf.d/
  55 │                   env:
  56 │                     - name: NODE_NAME
  57 │                       valueFrom:
  58 │                         fieldRef:
  59 │                             apiVersion: v1
  60 │                             fieldPath: spec.nodeName
  61 └                   image: quay.io/cilium/tetragon:v1.1.2
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



CronJob/unguard-user-simulator (kubernetes)
===========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 CronJob/unguard-user-simulator:29-45
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  29 ┌                         - env:
  30 │                             - name: FRONTEND_ADDR
  31 │                               value: unguard-envoy-proxy:8080/ui
  32 │                             - name: SIMULATE_PRIVATE_RANGES
  33 │                               value: "false"
  34 │                           image: ghcr.io/dynatrace-oss/unguard/unguard-user-simulator:0.9.3
  35 │                           imagePullPolicy: IfNotPresent
  36 │                           name: unguard-user-simulator
  37 └                           resources:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/cilium-operator (kubernetes)
=======================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/cilium-operator:55-116
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  55 ┌                 - args:
  56 │                     - --config-dir=/tmp/cilium/config-map
  57 │                     - --debug=$(CILIUM_DEBUG)
  58 │                   command:
  59 │                     - cilium-operator-generic
  60 │                   env:
  61 │                     - name: K8S_NODE_NAME
  62 │                       valueFrom:
  63 └                         fieldRef:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/kubeclarity-kubeclarity (kubernetes)
===============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/kubeclarity-kubeclarity:137-182
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 137 ┌                 - command:
 138 │                     - sh
 139 │                     - -c
 140 │                     - until pg_isready -h "$DB_HOST" -p "$DB_PORT_NUMBER" -U "$DB_USER" -d "dbname=$DB_NAME"; do echo waiting for database; sleep 2; done;
 141 │                   env:
 142 │                     - name: DB_NAME
 143 │                       valueFrom:
 144 │                         secretKeyRef:
 145 └                             key: postgres-database
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/kubeclarity-kubeclarity (kubernetes)
===============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/kubeclarity-kubeclarity:39-134
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  39 ┌                 - args:
  40 │                     - run
  41 │                     - --log-level
  42 │                     - warning
  43 │                   env:
  44 │                     - name: ENABLE_DB_INFO_LOGS
  45 │                       value: "false"
  46 │                     - name: DB_NAME
  47 └                       valueFrom:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/kubeclarity-kubeclarity (kubernetes)
===============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/kubeclarity-kubeclarity:183-210
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 183 ┌                 - args:
 184 │                     - /bin/sh
 185 │                     - -c
 186 │                     - |
 187 │                       set -x; while [ $(curl -sw '%{http_code}' "http://kubeclarity-kubeclarity-sbom-db:8081/healthz/ready" -o /dev/null) -ne 200 ]; do
 188 │                         echo waiting for sbom database; sleep 2;
 189 │                       done;
 190 │                   image: docker.io/curlimages/curl:7.87.0
 191 └                   imagePullPolicy: IfNotPresent
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/kubeclarity-kubeclarity (kubernetes)
===============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/kubeclarity-kubeclarity:211-238
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 211 ┌                 - args:
 212 │                     - /bin/sh
 213 │                     - -c
 214 │                     - |
 215 │                       set -x; while [ $(curl -sw '%{http_code}' "http://kubeclarity-kubeclarity-grype-server:8080/healthz/ready" -o /dev/null) -ne 200 ]; do
 216 │                         echo waiting for grype-server to be ready; sleep 2;
 217 │                       done;
 218 │                   image: docker.io/curlimages/curl:7.87.0
 219 └                   imagePullPolicy: IfNotPresent
 ...   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/hubble-relay (kubernetes)
====================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/hubble-relay:48-99
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  48 ┌                 - args:
  49 │                     - serve
  50 │                   command:
  51 │                     - hubble-relay
  52 │                   image: quay.io/cilium/hubble-relay:v1.15.4@sha256:03ad857feaf52f1b4774c29614f42a50b370680eb7d0bfbc1ae065df84b1070a
  53 │                   imagePullPolicy: IfNotPresent
  54 │                   livenessProbe:
  55 │                     failureThreshold: 3
  56 └                     grpc:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/hubble-ui (kubernetes)
=================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Deployment 'hubble-ui' should not be set with 'kube-system' namespace
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
ensure that User pods are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/ksv037
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/hubble-ui:20-107
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  20 ┌     progressDeadlineSeconds: 600
  21 │     replicas: 1
  22 │     revisionHistoryLimit: 10
  23 │     selector:
  24 │         matchLabels:
  25 │             k8s-app: hubble-ui
  26 │     strategy:
  27 │         rollingUpdate:
  28 └             maxSurge: 25%
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/tetragon-operator (kubernetes)
=========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Deployment 'tetragon-operator' should not be set with 'kube-system' namespace
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
ensure that User pods are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/ksv037
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/tetragon-operator:21-108
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  21 ┌     progressDeadlineSeconds: 600
  22 │     replicas: 1
  23 │     revisionHistoryLimit: 10
  24 │     selector:
  25 │         matchLabels:
  26 │             app.kubernetes.io/instance: tetragon
  27 │             app.kubernetes.io/name: tetragon-operator
  28 │     strategy:
  29 └         rollingUpdate:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/coredns (kubernetes)
===============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Deployment 'coredns' should not be set with 'kube-system' namespace
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
ensure that User pods are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/ksv037
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/coredns:15-122
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  15 ┌     progressDeadlineSeconds: 600
  16 │     replicas: 2
  17 │     revisionHistoryLimit: 10
  18 │     selector:
  19 │         matchLabels:
  20 │             k8s-app: kube-dns
  21 │     strategy:
  22 │         rollingUpdate:
  23 └             maxSurge: 25%
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/cilium (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: DaemonSet 'cilium' should not be set with 'kube-system' namespace
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
ensure that User pods are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/ksv037
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/cilium:20-488
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  20 ┌     revisionHistoryLimit: 10
  21 │     selector:
  22 │         matchLabels:
  23 │             k8s-app: cilium
  24 │     template:
  25 │         metadata:
  26 │             annotations:
  27 │                 cilium.io/cilium-configmap-checksum: be807b5457223052d9e69a28bd28dc0cdec9d86668a82d011167d4455f6042b2
  28 └                 container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: unconfined
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



DaemonSet/tetragon (kubernetes)
===============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: DaemonSet 'tetragon' should not be set with 'kube-system' namespace
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
ensure that User pods are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/ksv037
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 DaemonSet/tetragon:21-125
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  21 ┌     revisionHistoryLimit: 10
  22 │     selector:
  23 │         matchLabels:
  24 │             app.kubernetes.io/instance: tetragon
  25 │             app.kubernetes.io/name: tetragon
  26 │     template:
  27 │         metadata:
  28 │             annotations:
  29 └                 checksum/configmap: 199fa351a7ceb5300ce37ec6be68b701309bab393c0986122e4f3a2446fb168b
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Service/cilium-agent (kubernetes)
=================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Service 'cilium-agent' should not be set with 'kube-system' namespace
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
ensure that User pods are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/ksv037
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Service/cilium-agent:20-35
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  20 ┌     clusterIP: None
  21 │     clusterIPs:
  22 │         - None
  23 │     internalTrafficPolicy: Cluster
  24 │     ipFamilies:
  25 │         - IPv4
  26 │     ipFamilyPolicy: SingleStack
  27 │     ports:
  28 └         - name: envoy-metrics
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Service/hubble-metrics (kubernetes)
===================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Service 'hubble-metrics' should not be set with 'kube-system' namespace
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
ensure that User pods are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/ksv037
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Service/hubble-metrics:20-35
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  20 ┌     clusterIP: None
  21 │     clusterIPs:
  22 │         - None
  23 │     internalTrafficPolicy: Cluster
  24 │     ipFamilies:
  25 │         - IPv4
  26 │     ipFamilyPolicy: SingleStack
  27 │     ports:
  28 └         - name: hubble-metrics
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Service/hubble-peer (kubernetes)
================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Service 'hubble-peer' should not be set with 'kube-system' namespace
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
ensure that User pods are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/ksv037
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Service/hubble-peer:18-33
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  18 ┌     clusterIP: 10.96.213.18
  19 │     clusterIPs:
  20 │         - 10.96.213.18
  21 │     internalTrafficPolicy: Local
  22 │     ipFamilies:
  23 │         - IPv4
  24 │     ipFamilyPolicy: SingleStack
  25 │     ports:
  26 └         - name: peer-service
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Service/hubble-relay (kubernetes)
=================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Service 'hubble-relay' should not be set with 'kube-system' namespace
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
ensure that User pods are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/ksv037
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Service/hubble-relay:18-32
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  18 ┌     clusterIP: 10.96.239.173
  19 │     clusterIPs:
  20 │         - 10.96.239.173
  21 │     internalTrafficPolicy: Cluster
  22 │     ipFamilies:
  23 │         - IPv4
  24 │     ipFamilyPolicy: SingleStack
  25 │     ports:
  26 └         - port: 80
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Service/hubble-ui (kubernetes)
==============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Service 'hubble-ui' should not be set with 'kube-system' namespace
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
ensure that User pods are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/ksv037
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Service/hubble-ui:18-33
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  18 ┌     clusterIP: 10.96.24.255
  19 │     clusterIPs:
  20 │         - 10.96.24.255
  21 │     internalTrafficPolicy: Cluster
  22 │     ipFamilies:
  23 │         - IPv4
  24 │     ipFamilyPolicy: SingleStack
  25 │     ports:
  26 └         - name: http
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/cilium-operator (kubernetes)
=======================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Deployment 'cilium-operator' should not be set with 'kube-system' namespace
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
ensure that User pods are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/ksv037
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/cilium-operator:21-134
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  21 ┌     progressDeadlineSeconds: 600
  22 │     replicas: 2
  23 │     revisionHistoryLimit: 10
  24 │     selector:
  25 │         matchLabels:
  26 │             io.cilium/app: operator
  27 │             name: cilium-operator
  28 │     strategy:
  29 └         rollingUpdate:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Service/tetragon (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Service 'tetragon' should not be set with 'kube-system' namespace
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
ensure that User pods are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/ksv037
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Service/tetragon:19-38
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  19 ┌     clusterIP: 10.96.150.192
  20 │     clusterIPs:
  21 │         - 10.96.150.192
  22 │     internalTrafficPolicy: Cluster
  23 │     ipFamilies:
  24 │         - IPv4
  25 │     ipFamilyPolicy: SingleStack
  26 │     ports:
  27 └         - name: metrics
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Service/tetragon-operator-metrics (kubernetes)
==============================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Service 'tetragon-operator-metrics' should not be set with 'kube-system' namespace
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
ensure that User pods are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/ksv037
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Service/tetragon-operator-metrics:19-35
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  19 ┌     clusterIP: 10.96.56.223
  20 │     clusterIPs:
  21 │         - 10.96.56.223
  22 │     internalTrafficPolicy: Cluster
  23 │     ipFamilies:
  24 │         - IPv4
  25 │     ipFamilyPolicy: SingleStack
  26 │     ports:
  27 └         - name: metrics
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Deployment/hubble-relay (kubernetes)
====================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Deployment 'hubble-relay' should not be set with 'kube-system' namespace
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
ensure that User pods are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/ksv037
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Deployment/hubble-relay:20-130
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  20 ┌     progressDeadlineSeconds: 600
  21 │     replicas: 1
  22 │     revisionHistoryLimit: 10
  23 │     selector:
  24 │         matchLabels:
  25 │             k8s-app: hubble-relay
  26 │     strategy:
  27 │         rollingUpdate:
  28 └             maxSurge: 25%
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Ingress/hubble-ingress (kubernetes)
===================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Ingress 'hubble-ingress' should not be set with 'kube-system' namespace
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
ensure that User pods are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/ksv037
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Ingress/hubble-ingress:8-18
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   8 ┌     rules:
   9 │         - host: hubble.seccamp.com
  10 │           http:
  11 │             paths:
  12 │                 - backend:
  13 │                     service:
  14 │                         name: hubble-ui
  15 │                         port:
  16 └                             number: 80
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Service/kube-dns (kubernetes)
=============================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Service 'kube-dns' should not be set with 'kube-system' namespace
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
ensure that User pods are not placed in kube-system namespace

See https://avd.aquasec.com/misconfig/ksv037
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Service/kube-dns:17-40
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  17 ┌     clusterIP: 10.96.0.10
  18 │     clusterIPs:
  19 │         - 10.96.0.10
  20 │     internalTrafficPolicy: Cluster
  21 │     ipFamilies:
  22 │         - IPv4
  23 │     ipFamilyPolicy: SingleStack
  24 │     ports:
  25 └         - name: dns
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Pod/kube-apiserver-kind-control-plane (kubernetes)
==================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

MEDIUM: Ensure that the --anonymous-auth argument is set to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Disable anonymous requests to the API server.

See https://avd.aquasec.com/misconfig/kcv0001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Pod/kube-apiserver-kind-control-plane:26-118
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  26 ┌         - command:
  27 │             - kube-apiserver
  28 │             - --advertise-address=172.18.0.2
  29 │             - --allow-privileged=true
  30 │             - --audit-log-path=/var/log/kubernetes/kube-apiserver-audit.log
  31 │             - --audit-policy-file=/etc/kubernetes/policies/audit-policy.yaml
  32 │             - --authorization-mode=Node,RBAC
  33 │             - --client-ca-file=/etc/kubernetes/pki/ca.crt
  34 └             - --enable-admission-plugins=NodeRestriction
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



Pod/kube-apiserver-kind-control-plane (kubernetes)
==================================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 0 ()

LOW: Ensure that the --audit-log-maxage argument is set to 30 or as appropriate
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Retain the logs for at least 30 days or as appropriate.

See https://avd.aquasec.com/misconfig/kcv0020
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Pod/kube-apiserver-kind-control-plane:26-118
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  26 ┌         - command:
  27 │             - kube-apiserver
  28 │             - --advertise-address=172.18.0.2
  29 │             - --allow-privileged=true
  30 │             - --audit-log-path=/var/log/kubernetes/kube-apiserver-audit.log
  31 │             - --audit-policy-file=/etc/kubernetes/policies/audit-policy.yaml
  32 │             - --authorization-mode=Node,RBAC
  33 │             - --client-ca-file=/etc/kubernetes/pki/ca.crt
  34 └             - --enable-admission-plugins=NodeRestriction
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


